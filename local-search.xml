<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>flux代码阅读</title>
    <link href="/2024/12/28/flux%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    <url>/2024/12/28/flux%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>张量在内存中的存储</title>
    <link href="/2024/12/28/%E5%BC%A0%E9%87%8F%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8/"/>
    <url>/2024/12/28/%E5%BC%A0%E9%87%8F%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E5%AD%98%E5%82%A8/</url>
    
    <content type="html"><![CDATA[<p>在底层实现中，PyTorch 中的张量（Tensor）实际上是以<strong>一维的连续内存块</strong>存储的，只是通过<strong>不同的 stride 来控制数据在内存中的访问顺序</strong>。我习惯从右往左去看待张量，因此我说的层的顺序是从右往左的</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">Example</span><span class="hljs-selector-class">.1</span>：<span class="hljs-selector-tag">Tensor</span> <span class="hljs-selector-tag">A</span><span class="hljs-selector-class">.shape</span>: (<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>)<br>视图：<br><span class="hljs-selector-attr">[[[0, 1, 2, 3]</span>,   <span class="hljs-comment">// 第一个 batch, 第 1 行</span><br> <span class="hljs-selector-attr">[4, 5, 6, 7]</span>,   <span class="hljs-comment">// 第一个 batch, 第 2 行</span><br> <span class="hljs-selector-attr">[8, 9, 10, 11]</span>], <span class="hljs-comment">// 第一个 batch, 第 3 行</span><br> <span class="hljs-selector-attr">[[12, 13, 14, 15]</span>,  <span class="hljs-comment">// 第二个 batch, 第 1 行</span><br> <span class="hljs-selector-attr">[16, 17, 18, 19]</span>,  <span class="hljs-comment">// 第二个 batch, 第 2 行</span><br> <span class="hljs-selector-attr">[20, 21, 22, 23]</span>]]  <span class="hljs-comment">// 第二个 batch, 第 3 行</span><br>内存中的数据（按行主序排列）：<br><span class="hljs-selector-attr">[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]</span><br></code></pre></td></tr></table></figure><ul><li>stride[2] &#x3D; 1（最里层的stride都是1）代表最里层每个元素是紧邻的，例如0马上就接着1然后是2：<br>0,1,2,3</li><li>stride[1] &#x3D; A.shape[2] &#x3D; 4，代表每相邻4个元素是一组 ，例如0,1,2,3四个元素是一组，此时4，5，6，7又是新的一组:<br>[0,1,2,3], [4,5,6,7], …</li><li>stride[0] &#x3D; A.shape[2]*A.shape[1] &#x3D; 3*4，代表每相邻12个元素是一个更大的组，因此0-11这12个元素会形成最外层的大组:<br>[ [0,1,2,3], [4,5,6,7], [8,9,10,11] ], …</li></ul><p>由此可<strong>总结stride的规律</strong>：</p><ul><li>对于有N个维度的Tensor A, $$ stride[i] &#x3D; \prod_{k&#x3D;i+1}^{N-1} A.shape[k] \text{ for }  i &lt; N-1 \quad\text{and}\quad stride[N-1]&#x3D;1$$<br> 我们可以把print出来的Tensor<strong>从上到下，从左往右展平成一维向量</strong>， 他的张量视图就是根据上述得到的。</li></ul><p>理解了Tensor数据的组织方法，最重要的作用就是可以<strong>推导出reshape()，permute()或者view()这些操作后新的数据视图</strong>。</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs prolog"><span class="hljs-symbol">Example</span><span class="hljs-number">.2</span>: 对于<span class="hljs-number">1</span>中的<span class="hljs-symbol">Tensor</span> <span class="hljs-symbol">A</span> (<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)，如果执行<span class="hljs-symbol">A</span>.view(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)会是什么样子?<br>按照上述分析，首先把<span class="hljs-symbol">A</span>展平成一维：<br>[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>]<br>stride[<span class="hljs-number">3</span>] = <span class="hljs-number">1</span><br>stride[<span class="hljs-number">2</span>] = <span class="hljs-number">3</span>，得到[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>], [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>],...<br>stride[<span class="hljs-number">1</span>] = <span class="hljs-number">3</span>*<span class="hljs-number">2</span> = <span class="hljs-number">6</span>，得到[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]], [[<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>],[<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>]],...<br>stride[<span class="hljs-number">0</span>] = <span class="hljs-number">3</span>*<span class="hljs-number">2</span>*<span class="hljs-number">2</span> = <span class="hljs-number">12</span>，得到[[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]],[[<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>],[<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>]]], [[[<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>],[<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>]],[[<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>],[<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>]]]<br>于是变换后的最终结果为:<br>[[[[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],<br>[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]],<br>[[<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>],<br>[<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>]]], <br>[[[<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>],<br>[<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>]],<br>[[<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>],<br>[<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>]]]]<br>在pytorch中代码验证，结果相同:<br>import torch<br>    <span class="hljs-symbol">A</span> = torch.arange(<span class="hljs-number">24</span>).reshape(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<br>    print(<span class="hljs-symbol">A</span>)<br>    <span class="hljs-symbol">A</span> = <span class="hljs-symbol">A</span>.reshape(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<br>    print(<span class="hljs-symbol">A</span>)<br>tensor([[[[ <span class="hljs-number">0</span>,  <span class="hljs-number">1</span>,  <span class="hljs-number">2</span>],<br>          [ <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>]],<br><br>         [[ <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>],<br>          [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>]]],<br><br><br>        [[[<span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>],<br>          [<span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>]],<br><br>         [[<span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>],<br>          [<span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>]]]])    <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>小记</title>
    <link href="/2024/12/27/hello-world/"/>
    <url>/2024/12/27/hello-world/</url>
    
    <content type="html"><![CDATA[<p>最近在学习的时候总是会害怕过一段时间就忘记，于是有很强烈的去做个人博客的想法，接下来我将在这个博客记录一些日常学习的心得，以免往后遗忘。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
